// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: system/v1/sys_menu.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SysMenuRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId    string `protobuf:"bytes,1,opt,name=menuId,proto3" json:"menuId"`
	ParentId  string `protobuf:"bytes,2,opt,name=parentId,proto3" json:"parentId"`
	MenuName  string `protobuf:"bytes,3,opt,name=menuName,proto3" json:"menuName"`
	Icon      string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon"`
	MenuType  string `protobuf:"bytes,5,opt,name=menuType,proto3" json:"menuType"`
	OrderNum  int64  `protobuf:"varint,6,opt,name=orderNum,proto3" json:"orderNum"`
	IsFrame   string `protobuf:"bytes,7,opt,name=isFrame,proto3" json:"isFrame"`
	IsCache   string `protobuf:"bytes,8,opt,name=isCache,proto3" json:"isCache"`
	Visible   string `protobuf:"bytes,9,opt,name=visible,proto3" json:"visible"`
	Status    string `protobuf:"bytes,10,opt,name=status,proto3" json:"status"`
	Path      string `protobuf:"bytes,11,opt,name=path,proto3" json:"path"`
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component"`
	Perms     string `protobuf:"bytes,13,opt,name=perms,proto3" json:"perms"`
	Query     string `protobuf:"bytes,14,opt,name=query,proto3" json:"query"`
}

func (x *SysMenuRep) Reset() {
	*x = SysMenuRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuRep) ProtoMessage() {}

func (x *SysMenuRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuRep.ProtoReflect.Descriptor instead.
func (*SysMenuRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{0}
}

func (x *SysMenuRep) GetMenuId() string {
	if x != nil {
		return x.MenuId
	}
	return ""
}

func (x *SysMenuRep) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *SysMenuRep) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuRep) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuRep) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuRep) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *SysMenuRep) GetIsFrame() string {
	if x != nil {
		return x.IsFrame
	}
	return ""
}

func (x *SysMenuRep) GetIsCache() string {
	if x != nil {
		return x.IsCache
	}
	return ""
}

func (x *SysMenuRep) GetVisible() string {
	if x != nil {
		return x.Visible
	}
	return ""
}

func (x *SysMenuRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysMenuRep) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuRep) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuRep) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *SysMenuRep) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type DeleteSysMenuRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysMenuRep) Reset() {
	*x = DeleteSysMenuRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysMenuRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysMenuRep) ProtoMessage() {}

func (x *DeleteSysMenuRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysMenuRep.ProtoReflect.Descriptor instead.
func (*DeleteSysMenuRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteSysMenuRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysMenuRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetSysMenuRep) Reset() {
	*x = GetSysMenuRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysMenuRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysMenuRep) ProtoMessage() {}

func (x *GetSysMenuRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysMenuRep.ProtoReflect.Descriptor instead.
func (*GetSysMenuRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{2}
}

func (x *GetSysMenuRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu *MenuReply `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu"`
}

func (x *GetSysMenuReply) Reset() {
	*x = GetSysMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysMenuReply) ProtoMessage() {}

func (x *GetSysMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysMenuReply.ProtoReflect.Descriptor instead.
func (*GetSysMenuReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{3}
}

func (x *GetSysMenuReply) GetMenu() *MenuReply {
	if x != nil {
		return x.Menu
	}
	return nil
}

type ListSysMenuRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSysMenuRep) Reset() {
	*x = ListSysMenuRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysMenuRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysMenuRep) ProtoMessage() {}

func (x *ListSysMenuRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysMenuRep.ProtoReflect.Descriptor instead.
func (*ListSysMenuRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{4}
}

type ListSysMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuReply `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus"`
}

func (x *ListSysMenuReply) Reset() {
	*x = ListSysMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysMenuReply) ProtoMessage() {}

func (x *ListSysMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysMenuReply.ProtoReflect.Descriptor instead.
func (*ListSysMenuReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{5}
}

func (x *ListSysMenuReply) GetMenus() []*MenuReply {
	if x != nil {
		return x.Menus
	}
	return nil
}

type GetSysRoleMenuRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
}

func (x *GetSysRoleMenuRep) Reset() {
	*x = GetSysRoleMenuRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleMenuRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleMenuRep) ProtoMessage() {}

func (x *GetSysRoleMenuRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleMenuRep.ProtoReflect.Descriptor instead.
func (*GetSysRoleMenuRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{6}
}

func (x *GetSysRoleMenuRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type GetSysRoleMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus       []*RoleMenuReply `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus"`
	CheckedKeys []string         `protobuf:"bytes,2,rep,name=checkedKeys,proto3" json:"checkedKeys"`
}

func (x *GetSysRoleMenuReply) Reset() {
	*x = GetSysRoleMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleMenuReply) ProtoMessage() {}

func (x *GetSysRoleMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleMenuReply.ProtoReflect.Descriptor instead.
func (*GetSysRoleMenuReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{7}
}

func (x *GetSysRoleMenuReply) GetMenus() []*RoleMenuReply {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *GetSysRoleMenuReply) GetCheckedKeys() []string {
	if x != nil {
		return x.CheckedKeys
	}
	return nil
}

type RoleMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Pid      string           `protobuf:"bytes,2,opt,name=pid,proto3" json:"pid"`
	Label    string           `protobuf:"bytes,3,opt,name=label,proto3" json:"label"`
	Children []*RoleMenuReply `protobuf:"bytes,4,rep,name=children,proto3" json:"children"`
}

func (x *RoleMenuReply) Reset() {
	*x = RoleMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleMenuReply) ProtoMessage() {}

func (x *RoleMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleMenuReply.ProtoReflect.Descriptor instead.
func (*RoleMenuReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{8}
}

func (x *RoleMenuReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleMenuReply) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *RoleMenuReply) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoleMenuReply) GetChildren() []*RoleMenuReply {
	if x != nil {
		return x.Children
	}
	return nil
}

type MenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt  string   `protobuf:"bytes,1,opt,name=createdAt,proto3" json:"createdAt"`
	Remark     string   `protobuf:"bytes,2,opt,name=remark,proto3" json:"remark"`
	MenuId     string   `protobuf:"bytes,3,opt,name=menuId,proto3" json:"menuId"`
	MenuName   string   `protobuf:"bytes,4,opt,name=menuName,proto3" json:"menuName"`
	ParentName string   `protobuf:"bytes,5,opt,name=parentName,proto3" json:"parentName"`
	ParentId   string   `protobuf:"bytes,6,opt,name=parentId,proto3" json:"parentId"`
	OrderNum   int64    `protobuf:"varint,7,opt,name=orderNum,proto3" json:"orderNum"`
	Path       string   `protobuf:"bytes,8,opt,name=path,proto3" json:"path"`
	Component  string   `protobuf:"bytes,9,opt,name=component,proto3" json:"component"`
	Query      string   `protobuf:"bytes,10,opt,name=query,proto3" json:"query"`
	IsFrame    string   `protobuf:"bytes,11,opt,name=isFrame,proto3" json:"isFrame"`
	IsCache    string   `protobuf:"bytes,12,opt,name=isCache,proto3" json:"isCache"`
	MenuType   string   `protobuf:"bytes,13,opt,name=menuType,proto3" json:"menuType"`
	Visible    string   `protobuf:"bytes,14,opt,name=visible,proto3" json:"visible"`
	Status     string   `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`
	Perms      string   `protobuf:"bytes,16,opt,name=perms,proto3" json:"perms"`
	Icon       string   `protobuf:"bytes,17,opt,name=icon,proto3" json:"icon"`
	Children   []string `protobuf:"bytes,18,rep,name=children,proto3" json:"children"`
}

func (x *MenuReply) Reset() {
	*x = MenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuReply) ProtoMessage() {}

func (x *MenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuReply.ProtoReflect.Descriptor instead.
func (*MenuReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{9}
}

func (x *MenuReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MenuReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MenuReply) GetMenuId() string {
	if x != nil {
		return x.MenuId
	}
	return ""
}

func (x *MenuReply) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuReply) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

func (x *MenuReply) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *MenuReply) GetOrderNum() int64 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *MenuReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuReply) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuReply) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *MenuReply) GetIsFrame() string {
	if x != nil {
		return x.IsFrame
	}
	return ""
}

func (x *MenuReply) GetIsCache() string {
	if x != nil {
		return x.IsCache
	}
	return ""
}

func (x *MenuReply) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *MenuReply) GetVisible() string {
	if x != nil {
		return x.Visible
	}
	return ""
}

func (x *MenuReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MenuReply) GetPerms() string {
	if x != nil {
		return x.Perms
	}
	return ""
}

func (x *MenuReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuReply) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetTreeSelectRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTreeSelectRep) Reset() {
	*x = GetTreeSelectRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeSelectRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeSelectRep) ProtoMessage() {}

func (x *GetTreeSelectRep) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeSelectRep.ProtoReflect.Descriptor instead.
func (*GetTreeSelectRep) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{10}
}

type GetTreeSelectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*RoleMenuReply `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus"`
}

func (x *GetTreeSelectReply) Reset() {
	*x = GetTreeSelectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_system_v1_sys_menu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTreeSelectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTreeSelectReply) ProtoMessage() {}

func (x *GetTreeSelectReply) ProtoReflect() protoreflect.Message {
	mi := &file_system_v1_sys_menu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTreeSelectReply.ProtoReflect.Descriptor instead.
func (*GetTreeSelectReply) Descriptor() ([]byte, []int) {
	return file_system_v1_sys_menu_proto_rawDescGZIP(), []int{11}
}

func (x *GetTreeSelectReply) GetMenus() []*RoleMenuReply {
	if x != nil {
		return x.Menus
	}
	return nil
}

var File_system_v1_sys_menu_proto protoreflect.FileDescriptor

var file_system_v1_sys_menu_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f,
	0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x02, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x22, 0x10, 0x0a,
	0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x22,
	0x42, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x6d, 0x65,
	0x6e, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x12, 0x1f, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x6d,
	0x65, 0x6e, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x38, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xdd, 0x03, 0x0a, 0x09, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x22, 0x48,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x32, 0xf7, 0x05, 0x0a, 0x07, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x5f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e, 0x75,
	0x2f, 0x73, 0x61, 0x76, 0x65, 0x12, 0x61, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x1a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e,
	0x75, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x69, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x66, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e,
	0x75, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x6d,
	0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x2f, 0x7b, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x7d,
	0x12, 0x70, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x42, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x16, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_v1_sys_menu_proto_rawDescOnce sync.Once
	file_system_v1_sys_menu_proto_rawDescData = file_system_v1_sys_menu_proto_rawDesc
)

func file_system_v1_sys_menu_proto_rawDescGZIP() []byte {
	file_system_v1_sys_menu_proto_rawDescOnce.Do(func() {
		file_system_v1_sys_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_v1_sys_menu_proto_rawDescData)
	})
	return file_system_v1_sys_menu_proto_rawDescData
}

var file_system_v1_sys_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_system_v1_sys_menu_proto_goTypes = []interface{}{
	(*SysMenuRep)(nil),          // 0: api.system.v1.SysMenuRep
	(*DeleteSysMenuRep)(nil),    // 1: api.system.v1.DeleteSysMenuRep
	(*GetSysMenuRep)(nil),       // 2: api.system.v1.GetSysMenuRep
	(*GetSysMenuReply)(nil),     // 3: api.system.v1.GetSysMenuReply
	(*ListSysMenuRep)(nil),      // 4: api.system.v1.ListSysMenuRep
	(*ListSysMenuReply)(nil),    // 5: api.system.v1.ListSysMenuReply
	(*GetSysRoleMenuRep)(nil),   // 6: api.system.v1.GetSysRoleMenuRep
	(*GetSysRoleMenuReply)(nil), // 7: api.system.v1.GetSysRoleMenuReply
	(*RoleMenuReply)(nil),       // 8: api.system.v1.RoleMenuReply
	(*MenuReply)(nil),           // 9: api.system.v1.MenuReply
	(*GetTreeSelectRep)(nil),    // 10: api.system.v1.GetTreeSelectRep
	(*GetTreeSelectReply)(nil),  // 11: api.system.v1.GetTreeSelectReply
	(*EmptyReply)(nil),          // 12: api.system.v1.EmptyReply
}
var file_system_v1_sys_menu_proto_depIdxs = []int32{
	9,  // 0: api.system.v1.GetSysMenuReply.menu:type_name -> api.system.v1.MenuReply
	9,  // 1: api.system.v1.ListSysMenuReply.menus:type_name -> api.system.v1.MenuReply
	8,  // 2: api.system.v1.GetSysRoleMenuReply.menus:type_name -> api.system.v1.RoleMenuReply
	8,  // 3: api.system.v1.RoleMenuReply.children:type_name -> api.system.v1.RoleMenuReply
	8,  // 4: api.system.v1.GetTreeSelectReply.menus:type_name -> api.system.v1.RoleMenuReply
	0,  // 5: api.system.v1.SysMenu.CreateSysMenu:input_type -> api.system.v1.SysMenuRep
	0,  // 6: api.system.v1.SysMenu.UpdateSysMenu:input_type -> api.system.v1.SysMenuRep
	1,  // 7: api.system.v1.SysMenu.DeleteSysMenu:input_type -> api.system.v1.DeleteSysMenuRep
	2,  // 8: api.system.v1.SysMenu.GetSysMenu:input_type -> api.system.v1.GetSysMenuRep
	4,  // 9: api.system.v1.SysMenu.ListSysMenu:input_type -> api.system.v1.ListSysMenuRep
	6,  // 10: api.system.v1.SysMenu.GetSysRoleMenu:input_type -> api.system.v1.GetSysRoleMenuRep
	10, // 11: api.system.v1.SysMenu.GetTreeSelect:input_type -> api.system.v1.GetTreeSelectRep
	12, // 12: api.system.v1.SysMenu.CreateSysMenu:output_type -> api.system.v1.EmptyReply
	12, // 13: api.system.v1.SysMenu.UpdateSysMenu:output_type -> api.system.v1.EmptyReply
	12, // 14: api.system.v1.SysMenu.DeleteSysMenu:output_type -> api.system.v1.EmptyReply
	3,  // 15: api.system.v1.SysMenu.GetSysMenu:output_type -> api.system.v1.GetSysMenuReply
	5,  // 16: api.system.v1.SysMenu.ListSysMenu:output_type -> api.system.v1.ListSysMenuReply
	7,  // 17: api.system.v1.SysMenu.GetSysRoleMenu:output_type -> api.system.v1.GetSysRoleMenuReply
	11, // 18: api.system.v1.SysMenu.GetTreeSelect:output_type -> api.system.v1.GetTreeSelectReply
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_system_v1_sys_menu_proto_init() }
func file_system_v1_sys_menu_proto_init() {
	if File_system_v1_sys_menu_proto != nil {
		return
	}
	file_system_v1_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_system_v1_sys_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysMenuRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysMenuRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysMenuRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleMenuRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeSelectRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_system_v1_sys_menu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTreeSelectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_v1_sys_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_system_v1_sys_menu_proto_goTypes,
		DependencyIndexes: file_system_v1_sys_menu_proto_depIdxs,
		MessageInfos:      file_system_v1_sys_menu_proto_msgTypes,
	}.Build()
	File_system_v1_sys_menu_proto = out.File
	file_system_v1_sys_menu_proto_rawDesc = nil
	file_system_v1_sys_menu_proto_goTypes = nil
	file_system_v1_sys_menu_proto_depIdxs = nil
}
