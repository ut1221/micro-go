// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: api/system/v1/monitor.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitorServerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MonitorServerReq) Reset() {
	*x = MonitorServerReq{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorServerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorServerReq) ProtoMessage() {}

func (x *MonitorServerReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorServerReq.ProtoReflect.Descriptor instead.
func (*MonitorServerReq) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{0}
}

type MonitorServerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cpu      *Cpu        `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu"`
	Mem      *Mem        `protobuf:"bytes,2,opt,name=mem,proto3" json:"mem"`
	Jvm      *Jvm        `protobuf:"bytes,3,opt,name=jvm,proto3" json:"jvm"`
	Sys      *Sys        `protobuf:"bytes,4,opt,name=sys,proto3" json:"sys"`
	SysFiles []*SysFiles `protobuf:"bytes,5,rep,name=sysFiles,proto3" json:"sysFiles"`
}

func (x *MonitorServerReply) Reset() {
	*x = MonitorServerReply{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorServerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorServerReply) ProtoMessage() {}

func (x *MonitorServerReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorServerReply.ProtoReflect.Descriptor instead.
func (*MonitorServerReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *MonitorServerReply) GetCpu() *Cpu {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *MonitorServerReply) GetMem() *Mem {
	if x != nil {
		return x.Mem
	}
	return nil
}

func (x *MonitorServerReply) GetJvm() *Jvm {
	if x != nil {
		return x.Jvm
	}
	return nil
}

func (x *MonitorServerReply) GetSys() *Sys {
	if x != nil {
		return x.Sys
	}
	return nil
}

func (x *MonitorServerReply) GetSysFiles() []*SysFiles {
	if x != nil {
		return x.SysFiles
	}
	return nil
}

type Cpu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuNum int32  `protobuf:"varint,1,opt,name=cpuNum,proto3" json:"cpuNum"`
	Total  string `protobuf:"bytes,2,opt,name=total,proto3" json:"total"`
	Sys    string `protobuf:"bytes,3,opt,name=sys,proto3" json:"sys"`
	Used   string `protobuf:"bytes,4,opt,name=used,proto3" json:"used"`
	Wait   string `protobuf:"bytes,5,opt,name=wait,proto3" json:"wait"`
	Free   string `protobuf:"bytes,6,opt,name=free,proto3" json:"free"`
}

func (x *Cpu) Reset() {
	*x = Cpu{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cpu) ProtoMessage() {}

func (x *Cpu) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cpu.ProtoReflect.Descriptor instead.
func (*Cpu) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *Cpu) GetCpuNum() int32 {
	if x != nil {
		return x.CpuNum
	}
	return 0
}

func (x *Cpu) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Cpu) GetSys() string {
	if x != nil {
		return x.Sys
	}
	return ""
}

func (x *Cpu) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

func (x *Cpu) GetWait() string {
	if x != nil {
		return x.Wait
	}
	return ""
}

func (x *Cpu) GetFree() string {
	if x != nil {
		return x.Free
	}
	return ""
}

type Mem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total string `protobuf:"bytes,1,opt,name=total,proto3" json:"total"`
	Used  string `protobuf:"bytes,2,opt,name=used,proto3" json:"used"`
	Free  string `protobuf:"bytes,3,opt,name=free,proto3" json:"free"`
	Usage string `protobuf:"bytes,4,opt,name=usage,proto3" json:"usage"`
}

func (x *Mem) Reset() {
	*x = Mem{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mem) ProtoMessage() {}

func (x *Mem) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mem.ProtoReflect.Descriptor instead.
func (*Mem) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *Mem) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *Mem) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

func (x *Mem) GetFree() string {
	if x != nil {
		return x.Free
	}
	return ""
}

func (x *Mem) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

type Jvm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total     float32 `protobuf:"fixed32,1,opt,name=total,proto3" json:"total"`
	Max       int32   `protobuf:"varint,2,opt,name=max,proto3" json:"max"`
	Free      float32 `protobuf:"fixed32,3,opt,name=free,proto3" json:"free"`
	Version   string  `protobuf:"bytes,4,opt,name=version,proto3" json:"version"`
	Home      string  `protobuf:"bytes,5,opt,name=home,proto3" json:"home"`
	RunTime   string  `protobuf:"bytes,6,opt,name=runTime,proto3" json:"runTime"`
	InputArgs string  `protobuf:"bytes,7,opt,name=inputArgs,proto3" json:"inputArgs"`
	StartTime string  `protobuf:"bytes,8,opt,name=startTime,proto3" json:"startTime"`
	Used      float32 `protobuf:"fixed32,9,opt,name=used,proto3" json:"used"`
	Usage     float32 `protobuf:"fixed32,10,opt,name=usage,proto3" json:"usage"`
	Name      string  `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`
}

func (x *Jvm) Reset() {
	*x = Jvm{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jvm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jvm) ProtoMessage() {}

func (x *Jvm) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jvm.ProtoReflect.Descriptor instead.
func (*Jvm) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *Jvm) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Jvm) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Jvm) GetFree() float32 {
	if x != nil {
		return x.Free
	}
	return 0
}

func (x *Jvm) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Jvm) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

func (x *Jvm) GetRunTime() string {
	if x != nil {
		return x.RunTime
	}
	return ""
}

func (x *Jvm) GetInputArgs() string {
	if x != nil {
		return x.InputArgs
	}
	return ""
}

func (x *Jvm) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Jvm) GetUsed() float32 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Jvm) GetUsage() float32 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *Jvm) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Sys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputerName string `protobuf:"bytes,1,opt,name=computerName,proto3" json:"computerName"`
	ComputerIp   string `protobuf:"bytes,2,opt,name=computerIp,proto3" json:"computerIp"`
	UserDir      string `protobuf:"bytes,3,opt,name=userDir,proto3" json:"userDir"`
	OsName       string `protobuf:"bytes,4,opt,name=osName,proto3" json:"osName"`
	OsArch       string `protobuf:"bytes,5,opt,name=osArch,proto3" json:"osArch"`
}

func (x *Sys) Reset() {
	*x = Sys{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sys) ProtoMessage() {}

func (x *Sys) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sys.ProtoReflect.Descriptor instead.
func (*Sys) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *Sys) GetComputerName() string {
	if x != nil {
		return x.ComputerName
	}
	return ""
}

func (x *Sys) GetComputerIp() string {
	if x != nil {
		return x.ComputerIp
	}
	return ""
}

func (x *Sys) GetUserDir() string {
	if x != nil {
		return x.UserDir
	}
	return ""
}

func (x *Sys) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *Sys) GetOsArch() string {
	if x != nil {
		return x.OsArch
	}
	return ""
}

type SysFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DirName     string `protobuf:"bytes,1,opt,name=dirName,proto3" json:"dirName"`
	SysTypeName string `protobuf:"bytes,2,opt,name=sysTypeName,proto3" json:"sysTypeName"`
	TypeName    string `protobuf:"bytes,3,opt,name=typeName,proto3" json:"typeName"`
	Total       string `protobuf:"bytes,4,opt,name=total,proto3" json:"total"`
	Free        string `protobuf:"bytes,5,opt,name=free,proto3" json:"free"`
	Used        string `protobuf:"bytes,6,opt,name=used,proto3" json:"used"`
	Usage       string `protobuf:"bytes,7,opt,name=usage,proto3" json:"usage"`
}

func (x *SysFiles) Reset() {
	*x = SysFiles{}
	mi := &file_api_system_v1_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysFiles) ProtoMessage() {}

func (x *SysFiles) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysFiles.ProtoReflect.Descriptor instead.
func (*SysFiles) Descriptor() ([]byte, []int) {
	return file_api_system_v1_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *SysFiles) GetDirName() string {
	if x != nil {
		return x.DirName
	}
	return ""
}

func (x *SysFiles) GetSysTypeName() string {
	if x != nil {
		return x.SysTypeName
	}
	return ""
}

func (x *SysFiles) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *SysFiles) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *SysFiles) GetFree() string {
	if x != nil {
		return x.Free
	}
	return ""
}

func (x *SysFiles) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

func (x *SysFiles) GetUsage() string {
	if x != nil {
		return x.Usage
	}
	return ""
}

var File_api_system_v1_monitor_proto protoreflect.FileDescriptor

var file_api_system_v1_monitor_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x22, 0xe1,
	0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x70, 0x75, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x24, 0x0a, 0x03, 0x6d,
	0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x52, 0x03, 0x6d, 0x65,
	0x6d, 0x12, 0x24, 0x0a, 0x03, 0x6a, 0x76, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x76, 0x6d, 0x52, 0x03, 0x6a, 0x76, 0x6d, 0x12, 0x24, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x73, 0x79, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x03, 0x43, 0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x70,
	0x75, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x70, 0x75, 0x4e,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x79, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x61,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x22, 0x59, 0x0a, 0x03, 0x4d, 0x65, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x83, 0x02, 0x0a, 0x03, 0x4a, 0x76, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x72, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x03, 0x53, 0x79, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x49, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x73, 0x41, 0x72, 0x63, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x73, 0x41, 0x72, 0x63, 0x68, 0x22, 0xb6, 0x01,
	0x0a, 0x08, 0x53, 0x79, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x32, 0x7a, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x6f, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x42, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x16, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_system_v1_monitor_proto_rawDescOnce sync.Once
	file_api_system_v1_monitor_proto_rawDescData = file_api_system_v1_monitor_proto_rawDesc
)

func file_api_system_v1_monitor_proto_rawDescGZIP() []byte {
	file_api_system_v1_monitor_proto_rawDescOnce.Do(func() {
		file_api_system_v1_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_system_v1_monitor_proto_rawDescData)
	})
	return file_api_system_v1_monitor_proto_rawDescData
}

var file_api_system_v1_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_system_v1_monitor_proto_goTypes = []any{
	(*MonitorServerReq)(nil),   // 0: api.system.v1.MonitorServerReq
	(*MonitorServerReply)(nil), // 1: api.system.v1.MonitorServerReply
	(*Cpu)(nil),                // 2: api.system.v1.Cpu
	(*Mem)(nil),                // 3: api.system.v1.Mem
	(*Jvm)(nil),                // 4: api.system.v1.Jvm
	(*Sys)(nil),                // 5: api.system.v1.Sys
	(*SysFiles)(nil),           // 6: api.system.v1.SysFiles
}
var file_api_system_v1_monitor_proto_depIdxs = []int32{
	2, // 0: api.system.v1.MonitorServerReply.cpu:type_name -> api.system.v1.Cpu
	3, // 1: api.system.v1.MonitorServerReply.mem:type_name -> api.system.v1.Mem
	4, // 2: api.system.v1.MonitorServerReply.jvm:type_name -> api.system.v1.Jvm
	5, // 3: api.system.v1.MonitorServerReply.sys:type_name -> api.system.v1.Sys
	6, // 4: api.system.v1.MonitorServerReply.sysFiles:type_name -> api.system.v1.SysFiles
	0, // 5: api.system.v1.Monitor.MonitorServer:input_type -> api.system.v1.MonitorServerReq
	1, // 6: api.system.v1.Monitor.MonitorServer:output_type -> api.system.v1.MonitorServerReply
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_system_v1_monitor_proto_init() }
func file_api_system_v1_monitor_proto_init() {
	if File_api_system_v1_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_system_v1_monitor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_system_v1_monitor_proto_goTypes,
		DependencyIndexes: file_api_system_v1_monitor_proto_depIdxs,
		MessageInfos:      file_api_system_v1_monitor_proto_msgTypes,
	}.Build()
	File_api_system_v1_monitor_proto = out.File
	file_api_system_v1_monitor_proto_rawDesc = nil
	file_api_system_v1_monitor_proto_goTypes = nil
	file_api_system_v1_monitor_proto_depIdxs = nil
}
