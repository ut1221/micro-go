// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: api/system/v1/sys_user.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSysUserRep) Reset() {
	*x = CreateSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysUserRep) ProtoMessage() {}

func (x *CreateSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysUserRep.ProtoReflect.Descriptor instead.
func (*CreateSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{0}
}

type CreateSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateSysUserReply) Reset() {
	*x = CreateSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSysUserReply) ProtoMessage() {}

func (x *CreateSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSysUserReply.ProtoReflect.Descriptor instead.
func (*CreateSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{1}
}

type UpdateSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	DeptId      string   `protobuf:"bytes,2,opt,name=deptId,proto3" json:"deptId"`
	UserName    string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName"`
	NickName    string   `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName"`
	Password    string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password"`
	PhoneNumber string   `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber"`
	Email       string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email"`
	Sex         string   `protobuf:"bytes,8,opt,name=sex,proto3" json:"sex"`
	Status      string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	Remark      string   `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark"`
	PostIds     []string `protobuf:"bytes,11,rep,name=postIds,proto3" json:"postIds"`
	RoleIds     []string `protobuf:"bytes,12,rep,name=roleIds,proto3" json:"roleIds"`
}

func (x *UpdateSysUserRep) Reset() {
	*x = UpdateSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserRep) ProtoMessage() {}

func (x *UpdateSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserRep.ProtoReflect.Descriptor instead.
func (*UpdateSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSysUserRep) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSysUserRep) GetDeptId() string {
	if x != nil {
		return x.DeptId
	}
	return ""
}

func (x *UpdateSysUserRep) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdateSysUserRep) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateSysUserRep) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateSysUserRep) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UpdateSysUserRep) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateSysUserRep) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *UpdateSysUserRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateSysUserRep) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateSysUserRep) GetPostIds() []string {
	if x != nil {
		return x.PostIds
	}
	return nil
}

func (x *UpdateSysUserRep) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type UpdateSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSysUserReply) Reset() {
	*x = UpdateSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSysUserReply) ProtoMessage() {}

func (x *UpdateSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSysUserReply.ProtoReflect.Descriptor instead.
func (*UpdateSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{3}
}

type ResetPwdRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *ResetPwdRep) Reset() {
	*x = ResetPwdRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPwdRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPwdRep) ProtoMessage() {}

func (x *ResetPwdRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPwdRep.ProtoReflect.Descriptor instead.
func (*ResetPwdRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{4}
}

func (x *ResetPwdRep) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResetPwdRep) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ResetPwdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetPwdReply) Reset() {
	*x = ResetPwdReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetPwdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPwdReply) ProtoMessage() {}

func (x *ResetPwdReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPwdReply.ProtoReflect.Descriptor instead.
func (*ResetPwdReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{5}
}

type DeleteSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysUserRep) Reset() {
	*x = DeleteSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserRep) ProtoMessage() {}

func (x *DeleteSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserRep.ProtoReflect.Descriptor instead.
func (*DeleteSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSysUserRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
}

func (x *DeleteSysUserReply) Reset() {
	*x = DeleteSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysUserReply) ProtoMessage() {}

func (x *DeleteSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysUserReply.ProtoReflect.Descriptor instead.
func (*DeleteSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSysUserReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SaveSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeptId      string   `protobuf:"bytes,1,opt,name=deptId,proto3" json:"deptId"`
	UserName    string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName"`
	NickName    string   `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName"`
	Password    string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password"`
	PhoneNumber string   `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber"`
	Email       string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email"`
	Sex         string   `protobuf:"bytes,7,opt,name=sex,proto3" json:"sex"`
	Status      string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`
	Remark      string   `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark"`
	PostIds     []string `protobuf:"bytes,10,rep,name=postIds,proto3" json:"postIds"`
	RoleIds     []string `protobuf:"bytes,11,rep,name=roleIds,proto3" json:"roleIds"`
}

func (x *SaveSysUserRep) Reset() {
	*x = SaveSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSysUserRep) ProtoMessage() {}

func (x *SaveSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSysUserRep.ProtoReflect.Descriptor instead.
func (*SaveSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{8}
}

func (x *SaveSysUserRep) GetDeptId() string {
	if x != nil {
		return x.DeptId
	}
	return ""
}

func (x *SaveSysUserRep) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SaveSysUserRep) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SaveSysUserRep) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SaveSysUserRep) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SaveSysUserRep) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SaveSysUserRep) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *SaveSysUserRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SaveSysUserRep) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SaveSysUserRep) GetPostIds() []string {
	if x != nil {
		return x.PostIds
	}
	return nil
}

func (x *SaveSysUserRep) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

type SaveSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveSysUserReply) Reset() {
	*x = SaveSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveSysUserReply) ProtoMessage() {}

func (x *SaveSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveSysUserReply.ProtoReflect.Descriptor instead.
func (*SaveSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{9}
}

type GetSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetSysUserRep) Reset() {
	*x = GetSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserRep) ProtoMessage() {}

func (x *GetSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserRep.ProtoReflect.Descriptor instead.
func (*GetSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{10}
}

func (x *GetSysUserRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *UserReply   `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	PostIds []string     `protobuf:"bytes,2,rep,name=postIds,proto3" json:"postIds"`
	RoleIds []string     `protobuf:"bytes,3,rep,name=roleIds,proto3" json:"roleIds"`
	Roles   []*RoleReply `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles"`
	Posts   []*PostReply `protobuf:"bytes,5,rep,name=posts,proto3" json:"posts"`
}

func (x *GetSysUserReply) Reset() {
	*x = GetSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysUserReply) ProtoMessage() {}

func (x *GetSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysUserReply.ProtoReflect.Descriptor instead.
func (*GetSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetSysUserReply) GetUser() *UserReply {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetSysUserReply) GetPostIds() []string {
	if x != nil {
		return x.PostIds
	}
	return nil
}

func (x *GetSysUserReply) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *GetSysUserReply) GetRoles() []*RoleReply {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetSysUserReply) GetPosts() []*PostReply {
	if x != nil {
		return x.Posts
	}
	return nil
}

type GetOtherInfoRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOtherInfoRep) Reset() {
	*x = GetOtherInfoRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOtherInfoRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherInfoRep) ProtoMessage() {}

func (x *GetOtherInfoRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherInfoRep.ProtoReflect.Descriptor instead.
func (*GetOtherInfoRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{12}
}

type GetOtherInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*RoleReply `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles"`
	Posts []*PostReply `protobuf:"bytes,2,rep,name=posts,proto3" json:"posts"`
}

func (x *GetOtherInfoReply) Reset() {
	*x = GetOtherInfoReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOtherInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOtherInfoReply) ProtoMessage() {}

func (x *GetOtherInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOtherInfoReply.ProtoReflect.Descriptor instead.
func (*GetOtherInfoReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetOtherInfoReply) GetRoles() []*RoleReply {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetOtherInfoReply) GetPosts() []*PostReply {
	if x != nil {
		return x.Posts
	}
	return nil
}

type ListSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pageNum
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum"`
	// 页面大小
	PageSize    int64    `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
	DeptId      string   `protobuf:"bytes,3,opt,name=deptId,proto3" json:"deptId"`
	UserName    string   `protobuf:"bytes,4,opt,name=userName,proto3" json:"userName"`
	Status      int64    `protobuf:"varint,5,opt,name=status,proto3" json:"status"`
	PhoneNumber string   `protobuf:"bytes,6,opt,name=phoneNumber,proto3" json:"phoneNumber"`
	Params      *TimeReq `protobuf:"bytes,7,opt,name=params,proto3" json:"params"`
}

func (x *ListSysUserRep) Reset() {
	*x = ListSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserRep) ProtoMessage() {}

func (x *ListSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserRep.ProtoReflect.Descriptor instead.
func (*ListSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{14}
}

func (x *ListSysUserRep) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSysUserRep) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSysUserRep) GetDeptId() string {
	if x != nil {
		return x.DeptId
	}
	return ""
}

func (x *ListSysUserRep) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ListSysUserRep) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListSysUserRep) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ListSysUserRep) GetParams() *TimeReq {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Rows  []*ListSysUser `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows"`
}

func (x *ListSysUserReply) Reset() {
	*x = ListSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUserReply) ProtoMessage() {}

func (x *ListSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUserReply.ProtoReflect.Descriptor instead.
func (*ListSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{15}
}

func (x *ListSysUserReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysUserReply) GetRows() []*ListSysUser {
	if x != nil {
		return x.Rows
	}
	return nil
}

type ListSysUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserReply `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Dept *DeptReply `protobuf:"bytes,2,opt,name=dept,proto3" json:"dept"`
}

func (x *ListSysUser) Reset() {
	*x = ListSysUser{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSysUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysUser) ProtoMessage() {}

func (x *ListSysUser) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysUser.ProtoReflect.Descriptor instead.
func (*ListSysUser) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{16}
}

func (x *ListSysUser) GetUser() *UserReply {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ListSysUser) GetDept() *DeptReply {
	if x != nil {
		return x.Dept
	}
	return nil
}

type ProfileRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProfileRep) Reset() {
	*x = ProfileRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRep) ProtoMessage() {}

func (x *ProfileRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRep.ProtoReflect.Descriptor instead.
func (*ProfileRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{17}
}

type ProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserReply `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
}

func (x *ProfileReply) Reset() {
	*x = ProfileReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileReply) ProtoMessage() {}

func (x *ProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileReply.ProtoReflect.Descriptor instead.
func (*ProfileReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{18}
}

func (x *ProfileReply) GetUser() *UserReply {
	if x != nil {
		return x.User
	}
	return nil
}

type GetAuthRoleSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetAuthRoleSysUserRep) Reset() {
	*x = GetAuthRoleSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthRoleSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthRoleSysUserRep) ProtoMessage() {}

func (x *GetAuthRoleSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthRoleSysUserRep.ProtoReflect.Descriptor instead.
func (*GetAuthRoleSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{19}
}

func (x *GetAuthRoleSysUserRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAuthRoleSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User  *UserReply   `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Roles []*RoleReply `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles"`
}

func (x *GetAuthRoleSysUserReply) Reset() {
	*x = GetAuthRoleSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuthRoleSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthRoleSysUserReply) ProtoMessage() {}

func (x *GetAuthRoleSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthRoleSysUserReply.ProtoReflect.Descriptor instead.
func (*GetAuthRoleSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{20}
}

func (x *GetAuthRoleSysUserReply) GetUser() *UserReply {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetAuthRoleSysUserReply) GetRoles() []*RoleReply {
	if x != nil {
		return x.Roles
	}
	return nil
}

type AuthRoleSysUserRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleIds string `protobuf:"bytes,1,opt,name=roleIds,proto3" json:"roleIds"`
	UserId  string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
}

func (x *AuthRoleSysUserRep) Reset() {
	*x = AuthRoleSysUserRep{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRoleSysUserRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRoleSysUserRep) ProtoMessage() {}

func (x *AuthRoleSysUserRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRoleSysUserRep.ProtoReflect.Descriptor instead.
func (*AuthRoleSysUserRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{21}
}

func (x *AuthRoleSysUserRep) GetRoleIds() string {
	if x != nil {
		return x.RoleIds
	}
	return ""
}

func (x *AuthRoleSysUserRep) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AuthRoleSysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthRoleSysUserReply) Reset() {
	*x = AuthRoleSysUserReply{}
	mi := &file_api_system_v1_sys_user_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRoleSysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRoleSysUserReply) ProtoMessage() {}

func (x *AuthRoleSysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_user_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRoleSysUserReply.ProtoReflect.Descriptor instead.
func (*AuthRoleSysUserReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_user_proto_rawDescGZIP(), []int{22}
}

var File_api_system_v1_sys_user_proto protoreflect.FileDescriptor

var file_api_system_v1_sys_user_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc4, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x77,
	0x64, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x77, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x02, 0x0a, 0x0e,
	0x53, 0x61, 0x76, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x32, 0x0f, 0x28, 0x3f, 0x69, 0x29, 0x5e, 0x5b, 0x30,
	0x2d, 0x39, 0x61, 0x2d, 0x66, 0x5d, 0x2b, 0x24, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x22, 0x12, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70,
	0x6f, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x22, 0x73,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x70, 0x6f,
	0x73, 0x74, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x58, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x69, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x65, 0x70,
	0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x22,
	0x3c, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x27, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x77, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x46, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32,
	0xc5, 0x09, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x6f, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x6f, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x1a, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x1a, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x62, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x77, 0x64, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x77, 0x64, 0x52, 0x65, 0x70, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x77, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x50, 0x77,
	0x64, 0x12, 0x71, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x0b, 0x53, 0x61, 0x76, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x12, 0x66, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x67, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x77,
	0x0a, 0x0f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x61,
	0x75, 0x74, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x16, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_system_v1_sys_user_proto_rawDescOnce sync.Once
	file_api_system_v1_sys_user_proto_rawDescData = file_api_system_v1_sys_user_proto_rawDesc
)

func file_api_system_v1_sys_user_proto_rawDescGZIP() []byte {
	file_api_system_v1_sys_user_proto_rawDescOnce.Do(func() {
		file_api_system_v1_sys_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_system_v1_sys_user_proto_rawDescData)
	})
	return file_api_system_v1_sys_user_proto_rawDescData
}

var file_api_system_v1_sys_user_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_system_v1_sys_user_proto_goTypes = []any{
	(*CreateSysUserRep)(nil),        // 0: api.system.v1.CreateSysUserRep
	(*CreateSysUserReply)(nil),      // 1: api.system.v1.CreateSysUserReply
	(*UpdateSysUserRep)(nil),        // 2: api.system.v1.UpdateSysUserRep
	(*UpdateSysUserReply)(nil),      // 3: api.system.v1.UpdateSysUserReply
	(*ResetPwdRep)(nil),             // 4: api.system.v1.ResetPwdRep
	(*ResetPwdReply)(nil),           // 5: api.system.v1.ResetPwdReply
	(*DeleteSysUserRep)(nil),        // 6: api.system.v1.DeleteSysUserRep
	(*DeleteSysUserReply)(nil),      // 7: api.system.v1.DeleteSysUserReply
	(*SaveSysUserRep)(nil),          // 8: api.system.v1.SaveSysUserRep
	(*SaveSysUserReply)(nil),        // 9: api.system.v1.SaveSysUserReply
	(*GetSysUserRep)(nil),           // 10: api.system.v1.GetSysUserRep
	(*GetSysUserReply)(nil),         // 11: api.system.v1.GetSysUserReply
	(*GetOtherInfoRep)(nil),         // 12: api.system.v1.GetOtherInfoRep
	(*GetOtherInfoReply)(nil),       // 13: api.system.v1.GetOtherInfoReply
	(*ListSysUserRep)(nil),          // 14: api.system.v1.ListSysUserRep
	(*ListSysUserReply)(nil),        // 15: api.system.v1.ListSysUserReply
	(*ListSysUser)(nil),             // 16: api.system.v1.ListSysUser
	(*ProfileRep)(nil),              // 17: api.system.v1.ProfileRep
	(*ProfileReply)(nil),            // 18: api.system.v1.ProfileReply
	(*GetAuthRoleSysUserRep)(nil),   // 19: api.system.v1.GetAuthRoleSysUserRep
	(*GetAuthRoleSysUserReply)(nil), // 20: api.system.v1.GetAuthRoleSysUserReply
	(*AuthRoleSysUserRep)(nil),      // 21: api.system.v1.AuthRoleSysUserRep
	(*AuthRoleSysUserReply)(nil),    // 22: api.system.v1.AuthRoleSysUserReply
	(*UserReply)(nil),               // 23: api.system.v1.UserReply
	(*RoleReply)(nil),               // 24: api.system.v1.RoleReply
	(*PostReply)(nil),               // 25: api.system.v1.PostReply
	(*TimeReq)(nil),                 // 26: api.system.v1.TimeReq
	(*DeptReply)(nil),               // 27: api.system.v1.DeptReply
}
var file_api_system_v1_sys_user_proto_depIdxs = []int32{
	23, // 0: api.system.v1.GetSysUserReply.user:type_name -> api.system.v1.UserReply
	24, // 1: api.system.v1.GetSysUserReply.roles:type_name -> api.system.v1.RoleReply
	25, // 2: api.system.v1.GetSysUserReply.posts:type_name -> api.system.v1.PostReply
	24, // 3: api.system.v1.GetOtherInfoReply.roles:type_name -> api.system.v1.RoleReply
	25, // 4: api.system.v1.GetOtherInfoReply.posts:type_name -> api.system.v1.PostReply
	26, // 5: api.system.v1.ListSysUserRep.params:type_name -> api.system.v1.TimeReq
	16, // 6: api.system.v1.ListSysUserReply.rows:type_name -> api.system.v1.ListSysUser
	23, // 7: api.system.v1.ListSysUser.user:type_name -> api.system.v1.UserReply
	27, // 8: api.system.v1.ListSysUser.dept:type_name -> api.system.v1.DeptReply
	23, // 9: api.system.v1.ProfileReply.user:type_name -> api.system.v1.UserReply
	23, // 10: api.system.v1.GetAuthRoleSysUserReply.user:type_name -> api.system.v1.UserReply
	24, // 11: api.system.v1.GetAuthRoleSysUserReply.roles:type_name -> api.system.v1.RoleReply
	0,  // 12: api.system.v1.SysUser.CreateSysUser:input_type -> api.system.v1.CreateSysUserRep
	2,  // 13: api.system.v1.SysUser.UpdateSysUser:input_type -> api.system.v1.UpdateSysUserRep
	4,  // 14: api.system.v1.SysUser.ResetPwd:input_type -> api.system.v1.ResetPwdRep
	6,  // 15: api.system.v1.SysUser.DeleteSysUser:input_type -> api.system.v1.DeleteSysUserRep
	8,  // 16: api.system.v1.SysUser.SaveSysUser:input_type -> api.system.v1.SaveSysUserRep
	10, // 17: api.system.v1.SysUser.GetSysUser:input_type -> api.system.v1.GetSysUserRep
	12, // 18: api.system.v1.SysUser.GetOtherInfo:input_type -> api.system.v1.GetOtherInfoRep
	14, // 19: api.system.v1.SysUser.ListSysUser:input_type -> api.system.v1.ListSysUserRep
	17, // 20: api.system.v1.SysUser.Profile:input_type -> api.system.v1.ProfileRep
	19, // 21: api.system.v1.SysUser.GetAuthRoleSysUser:input_type -> api.system.v1.GetAuthRoleSysUserRep
	21, // 22: api.system.v1.SysUser.AuthRoleSysUser:input_type -> api.system.v1.AuthRoleSysUserRep
	1,  // 23: api.system.v1.SysUser.CreateSysUser:output_type -> api.system.v1.CreateSysUserReply
	3,  // 24: api.system.v1.SysUser.UpdateSysUser:output_type -> api.system.v1.UpdateSysUserReply
	5,  // 25: api.system.v1.SysUser.ResetPwd:output_type -> api.system.v1.ResetPwdReply
	7,  // 26: api.system.v1.SysUser.DeleteSysUser:output_type -> api.system.v1.DeleteSysUserReply
	9,  // 27: api.system.v1.SysUser.SaveSysUser:output_type -> api.system.v1.SaveSysUserReply
	11, // 28: api.system.v1.SysUser.GetSysUser:output_type -> api.system.v1.GetSysUserReply
	13, // 29: api.system.v1.SysUser.GetOtherInfo:output_type -> api.system.v1.GetOtherInfoReply
	15, // 30: api.system.v1.SysUser.ListSysUser:output_type -> api.system.v1.ListSysUserReply
	18, // 31: api.system.v1.SysUser.Profile:output_type -> api.system.v1.ProfileReply
	20, // 32: api.system.v1.SysUser.GetAuthRoleSysUser:output_type -> api.system.v1.GetAuthRoleSysUserReply
	22, // 33: api.system.v1.SysUser.AuthRoleSysUser:output_type -> api.system.v1.AuthRoleSysUserReply
	23, // [23:34] is the sub-list for method output_type
	12, // [12:23] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_system_v1_sys_user_proto_init() }
func file_api_system_v1_sys_user_proto_init() {
	if File_api_system_v1_sys_user_proto != nil {
		return
	}
	file_api_system_v1_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_system_v1_sys_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_system_v1_sys_user_proto_goTypes,
		DependencyIndexes: file_api_system_v1_sys_user_proto_depIdxs,
		MessageInfos:      file_api_system_v1_sys_user_proto_msgTypes,
	}.Build()
	File_api_system_v1_sys_user_proto = out.File
	file_api_system_v1_sys_user_proto_rawDesc = nil
	file_api_system_v1_sys_user_proto_goTypes = nil
	file_api_system_v1_sys_user_proto_depIdxs = nil
}
