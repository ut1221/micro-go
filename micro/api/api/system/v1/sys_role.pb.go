// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: api/system/v1/sys_role.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModifySysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Remark            string   `protobuf:"bytes,1,opt,name=remark,proto3" json:"remark"`
	RoleId            string   `protobuf:"bytes,2,opt,name=roleId,proto3" json:"roleId"`
	RoleName          string   `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName"`
	RoleKey           string   `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey"`
	RoleSort          int64    `protobuf:"varint,5,opt,name=roleSort,proto3" json:"roleSort"`
	DataScope         string   `protobuf:"bytes,6,opt,name=dataScope,proto3" json:"dataScope"`
	MenuCheckStrictly bool     `protobuf:"varint,7,opt,name=menuCheckStrictly,proto3" json:"menuCheckStrictly"`
	DeptCheckStrictly bool     `protobuf:"varint,8,opt,name=deptCheckStrictly,proto3" json:"deptCheckStrictly"`
	Status            string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	Flag              bool     `protobuf:"varint,10,opt,name=flag,proto3" json:"flag"`
	MenuIds           []string `protobuf:"bytes,11,rep,name=menuIds,proto3" json:"menuIds"`
	DeptIds           []string `protobuf:"bytes,12,rep,name=deptIds,proto3" json:"deptIds"`
	DeptNames         []string `protobuf:"bytes,13,rep,name=deptNames,proto3" json:"deptNames"`
	Admin             bool     `protobuf:"varint,14,opt,name=admin,proto3" json:"admin"`
}

func (x *ModifySysRoleRep) Reset() {
	*x = ModifySysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySysRoleRep) ProtoMessage() {}

func (x *ModifySysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySysRoleRep.ProtoReflect.Descriptor instead.
func (*ModifySysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{0}
}

func (x *ModifySysRoleRep) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ModifySysRoleRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ModifySysRoleRep) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *ModifySysRoleRep) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *ModifySysRoleRep) GetRoleSort() int64 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *ModifySysRoleRep) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *ModifySysRoleRep) GetMenuCheckStrictly() bool {
	if x != nil {
		return x.MenuCheckStrictly
	}
	return false
}

func (x *ModifySysRoleRep) GetDeptCheckStrictly() bool {
	if x != nil {
		return x.DeptCheckStrictly
	}
	return false
}

func (x *ModifySysRoleRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ModifySysRoleRep) GetFlag() bool {
	if x != nil {
		return x.Flag
	}
	return false
}

func (x *ModifySysRoleRep) GetMenuIds() []string {
	if x != nil {
		return x.MenuIds
	}
	return nil
}

func (x *ModifySysRoleRep) GetDeptIds() []string {
	if x != nil {
		return x.DeptIds
	}
	return nil
}

func (x *ModifySysRoleRep) GetDeptNames() []string {
	if x != nil {
		return x.DeptNames
	}
	return nil
}

func (x *ModifySysRoleRep) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

type DataScopeSysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId    string   `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
	DeptIds   []string `protobuf:"bytes,2,rep,name=deptIds,proto3" json:"deptIds"`
	DataScope string   `protobuf:"bytes,3,opt,name=dataScope,proto3" json:"dataScope"`
}

func (x *DataScopeSysRoleRep) Reset() {
	*x = DataScopeSysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataScopeSysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataScopeSysRoleRep) ProtoMessage() {}

func (x *DataScopeSysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataScopeSysRoleRep.ProtoReflect.Descriptor instead.
func (*DataScopeSysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{1}
}

func (x *DataScopeSysRoleRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *DataScopeSysRoleRep) GetDeptIds() []string {
	if x != nil {
		return x.DeptIds
	}
	return nil
}

func (x *DataScopeSysRoleRep) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

type ChangeStatusSysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
}

func (x *ChangeStatusSysRoleRep) Reset() {
	*x = ChangeStatusSysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStatusSysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStatusSysRoleRep) ProtoMessage() {}

func (x *ChangeStatusSysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStatusSysRoleRep.ProtoReflect.Descriptor instead.
func (*ChangeStatusSysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeStatusSysRoleRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *ChangeStatusSysRoleRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteSysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysRoleRep) Reset() {
	*x = DeleteSysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysRoleRep) ProtoMessage() {}

func (x *DeleteSysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysRoleRep.ProtoReflect.Descriptor instead.
func (*DeleteSysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSysRoleRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
}

func (x *GetSysRoleRep) Reset() {
	*x = GetSysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleRep) ProtoMessage() {}

func (x *GetSysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleRep.ProtoReflect.Descriptor instead.
func (*GetSysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{4}
}

func (x *GetSysRoleRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type GetSysRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *RoleReply `protobuf:"bytes,1,opt,name=role,proto3" json:"role"`
}

func (x *GetSysRoleReply) Reset() {
	*x = GetSysRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysRoleReply) ProtoMessage() {}

func (x *GetSysRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysRoleReply.ProtoReflect.Descriptor instead.
func (*GetSysRoleReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{5}
}

func (x *GetSysRoleReply) GetRole() *RoleReply {
	if x != nil {
		return x.Role
	}
	return nil
}

type ListSysRoleRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pageNum
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum"`
	// 页面大小
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *ListSysRoleRep) Reset() {
	*x = ListSysRoleRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleRep) ProtoMessage() {}

func (x *ListSysRoleRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleRep.ProtoReflect.Descriptor instead.
func (*ListSysRoleRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{6}
}

func (x *ListSysRoleRep) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSysRoleRep) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListSysRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64        `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Rows  []*RoleReply `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows"`
}

func (x *ListSysRoleReply) Reset() {
	*x = ListSysRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysRoleReply) ProtoMessage() {}

func (x *ListSysRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysRoleReply.ProtoReflect.Descriptor instead.
func (*ListSysRoleReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{7}
}

func (x *ListSysRoleReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysRoleReply) GetRows() []*RoleReply {
	if x != nil {
		return x.Rows
	}
	return nil
}

type IsAllocatedListRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pageNum
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum"`
	// 页面大小
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
	RoleId   string `protobuf:"bytes,3,opt,name=roleId,proto3" json:"roleId"`
}

func (x *IsAllocatedListRep) Reset() {
	*x = IsAllocatedListRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAllocatedListRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAllocatedListRep) ProtoMessage() {}

func (x *IsAllocatedListRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAllocatedListRep.ProtoReflect.Descriptor instead.
func (*IsAllocatedListRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{8}
}

func (x *IsAllocatedListRep) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *IsAllocatedListRep) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *IsAllocatedListRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type IsAllocatedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rows  []*UserReply `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows"`
	Total int64        `protobuf:"varint,2,opt,name=total,proto3" json:"total"`
}

func (x *IsAllocatedListReply) Reset() {
	*x = IsAllocatedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAllocatedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAllocatedListReply) ProtoMessage() {}

func (x *IsAllocatedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAllocatedListReply.ProtoReflect.Descriptor instead.
func (*IsAllocatedListReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{9}
}

func (x *IsAllocatedListReply) GetRows() []*UserReply {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *IsAllocatedListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AuthUserCancelRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
}

func (x *AuthUserCancelRep) Reset() {
	*x = AuthUserCancelRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserCancelRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserCancelRep) ProtoMessage() {}

func (x *AuthUserCancelRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserCancelRep.ProtoReflect.Descriptor instead.
func (*AuthUserCancelRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{10}
}

func (x *AuthUserCancelRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AuthUserCancelRep) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AuthUserSelectAllRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId  string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId"`
	UserIds string `protobuf:"bytes,2,opt,name=userIds,proto3" json:"userIds"`
}

func (x *AuthUserSelectAllRep) Reset() {
	*x = AuthUserSelectAllRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserSelectAllRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserSelectAllRep) ProtoMessage() {}

func (x *AuthUserSelectAllRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserSelectAllRep.ProtoReflect.Descriptor instead.
func (*AuthUserSelectAllRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_role_proto_rawDescGZIP(), []int{11}
}

func (x *AuthUserSelectAllRep) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *AuthUserSelectAllRep) GetUserIds() string {
	if x != nil {
		return x.UserIds
	}
	return ""
}

var File_api_system_v1_sys_role_proto protoreflect.FileDescriptor

var file_api_system_v1_sys_role_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2,
	0x03, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x6c,
	0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x6e, 0x75, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x6d, 0x65, 0x6e, 0x75, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c,
	0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74,
	0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65,
	0x70, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x22, 0x65, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x22, 0x58, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x56, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0x74, 0x0a, 0x12, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x49, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x43, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x32, 0x84, 0x0b, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x65, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x73, 0x61, 0x76, 0x65, 0x12, 0x67, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a,
	0x1a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x70, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x1a,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x79, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x69,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x7d, 0x12, 0x67, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22,
	0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x83,
	0x01, 0x0a, 0x0d, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x2f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x0f, 0x55, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x2f, 0x75,
	0x6e, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x72,
	0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52,
	0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x1a, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f,
	0x6c, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x12, 0x7b, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a,
	0x01, 0x2a, 0x1a, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x2f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x12,
	0x7b, 0x0a, 0x11, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x41, 0x6c, 0x6c, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x1a,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x2d, 0x0a, 0x0d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x1a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_system_v1_sys_role_proto_rawDescOnce sync.Once
	file_api_system_v1_sys_role_proto_rawDescData = file_api_system_v1_sys_role_proto_rawDesc
)

func file_api_system_v1_sys_role_proto_rawDescGZIP() []byte {
	file_api_system_v1_sys_role_proto_rawDescOnce.Do(func() {
		file_api_system_v1_sys_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_system_v1_sys_role_proto_rawDescData)
	})
	return file_api_system_v1_sys_role_proto_rawDescData
}

var file_api_system_v1_sys_role_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_system_v1_sys_role_proto_goTypes = []interface{}{
	(*ModifySysRoleRep)(nil),       // 0: api.system.v1.ModifySysRoleRep
	(*DataScopeSysRoleRep)(nil),    // 1: api.system.v1.DataScopeSysRoleRep
	(*ChangeStatusSysRoleRep)(nil), // 2: api.system.v1.ChangeStatusSysRoleRep
	(*DeleteSysRoleRep)(nil),       // 3: api.system.v1.DeleteSysRoleRep
	(*GetSysRoleRep)(nil),          // 4: api.system.v1.GetSysRoleRep
	(*GetSysRoleReply)(nil),        // 5: api.system.v1.GetSysRoleReply
	(*ListSysRoleRep)(nil),         // 6: api.system.v1.ListSysRoleRep
	(*ListSysRoleReply)(nil),       // 7: api.system.v1.ListSysRoleReply
	(*IsAllocatedListRep)(nil),     // 8: api.system.v1.IsAllocatedListRep
	(*IsAllocatedListReply)(nil),   // 9: api.system.v1.IsAllocatedListReply
	(*AuthUserCancelRep)(nil),      // 10: api.system.v1.AuthUserCancelRep
	(*AuthUserSelectAllRep)(nil),   // 11: api.system.v1.AuthUserSelectAllRep
	(*RoleReply)(nil),              // 12: api.system.v1.RoleReply
	(*UserReply)(nil),              // 13: api.system.v1.UserReply
	(*EmptyReply)(nil),             // 14: api.system.v1.EmptyReply
}
var file_api_system_v1_sys_role_proto_depIdxs = []int32{
	12, // 0: api.system.v1.GetSysRoleReply.role:type_name -> api.system.v1.RoleReply
	12, // 1: api.system.v1.ListSysRoleReply.rows:type_name -> api.system.v1.RoleReply
	13, // 2: api.system.v1.IsAllocatedListReply.rows:type_name -> api.system.v1.UserReply
	0,  // 3: api.system.v1.SysRole.CreateSysRole:input_type -> api.system.v1.ModifySysRoleRep
	0,  // 4: api.system.v1.SysRole.UpdateSysRole:input_type -> api.system.v1.ModifySysRoleRep
	1,  // 5: api.system.v1.SysRole.DataScopeSysRole:input_type -> api.system.v1.DataScopeSysRoleRep
	2,  // 6: api.system.v1.SysRole.ChangeStatusSysRole:input_type -> api.system.v1.ChangeStatusSysRoleRep
	3,  // 7: api.system.v1.SysRole.DeleteSysRole:input_type -> api.system.v1.DeleteSysRoleRep
	4,  // 8: api.system.v1.SysRole.GetSysRole:input_type -> api.system.v1.GetSysRoleRep
	6,  // 9: api.system.v1.SysRole.ListSysRole:input_type -> api.system.v1.ListSysRoleRep
	8,  // 10: api.system.v1.SysRole.AllocatedList:input_type -> api.system.v1.IsAllocatedListRep
	8,  // 11: api.system.v1.SysRole.UnAllocatedList:input_type -> api.system.v1.IsAllocatedListRep
	10, // 12: api.system.v1.SysRole.AuthUserCancel:input_type -> api.system.v1.AuthUserCancelRep
	11, // 13: api.system.v1.SysRole.AuthUserCancelAll:input_type -> api.system.v1.AuthUserSelectAllRep
	11, // 14: api.system.v1.SysRole.AuthUserSelectAll:input_type -> api.system.v1.AuthUserSelectAllRep
	14, // 15: api.system.v1.SysRole.CreateSysRole:output_type -> api.system.v1.EmptyReply
	14, // 16: api.system.v1.SysRole.UpdateSysRole:output_type -> api.system.v1.EmptyReply
	14, // 17: api.system.v1.SysRole.DataScopeSysRole:output_type -> api.system.v1.EmptyReply
	14, // 18: api.system.v1.SysRole.ChangeStatusSysRole:output_type -> api.system.v1.EmptyReply
	14, // 19: api.system.v1.SysRole.DeleteSysRole:output_type -> api.system.v1.EmptyReply
	5,  // 20: api.system.v1.SysRole.GetSysRole:output_type -> api.system.v1.GetSysRoleReply
	7,  // 21: api.system.v1.SysRole.ListSysRole:output_type -> api.system.v1.ListSysRoleReply
	9,  // 22: api.system.v1.SysRole.AllocatedList:output_type -> api.system.v1.IsAllocatedListReply
	9,  // 23: api.system.v1.SysRole.UnAllocatedList:output_type -> api.system.v1.IsAllocatedListReply
	14, // 24: api.system.v1.SysRole.AuthUserCancel:output_type -> api.system.v1.EmptyReply
	14, // 25: api.system.v1.SysRole.AuthUserCancelAll:output_type -> api.system.v1.EmptyReply
	14, // 26: api.system.v1.SysRole.AuthUserSelectAll:output_type -> api.system.v1.EmptyReply
	15, // [15:27] is the sub-list for method output_type
	3,  // [3:15] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_system_v1_sys_role_proto_init() }
func file_api_system_v1_sys_role_proto_init() {
	if File_api_system_v1_sys_role_proto != nil {
		return
	}
	file_api_system_v1_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_system_v1_sys_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataScopeSysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStatusSysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAllocatedListRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAllocatedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserCancelRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserSelectAllRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_system_v1_sys_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_system_v1_sys_role_proto_goTypes,
		DependencyIndexes: file_api_system_v1_sys_role_proto_depIdxs,
		MessageInfos:      file_api_system_v1_sys_role_proto_msgTypes,
	}.Build()
	File_api_system_v1_sys_role_proto = out.File
	file_api_system_v1_sys_role_proto_rawDesc = nil
	file_api_system_v1_sys_role_proto_goTypes = nil
	file_api_system_v1_sys_role_proto_depIdxs = nil
}
