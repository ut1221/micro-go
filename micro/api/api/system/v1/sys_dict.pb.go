// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: api/system/v1/sys_dict.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptySysDictReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptySysDictReply) Reset() {
	*x = EmptySysDictReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptySysDictReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptySysDictReply) ProtoMessage() {}

func (x *EmptySysDictReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptySysDictReply.ProtoReflect.Descriptor instead.
func (*EmptySysDictReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{0}
}

type SysDictDataTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
}

func (x *SysDictDataTypeReq) Reset() {
	*x = SysDictDataTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataTypeReq) ProtoMessage() {}

func (x *SysDictDataTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataTypeReq.ProtoReflect.Descriptor instead.
func (*SysDictDataTypeReq) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{1}
}

func (x *SysDictDataTypeReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SysDictDataTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dict []*DictDataReply `protobuf:"bytes,1,rep,name=dict,proto3" json:"dict"`
}

func (x *SysDictDataTypeReply) Reset() {
	*x = SysDictDataTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataTypeReply) ProtoMessage() {}

func (x *SysDictDataTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataTypeReply.ProtoReflect.Descriptor instead.
func (*SysDictDataTypeReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{2}
}

func (x *SysDictDataTypeReply) GetDict() []*DictDataReply {
	if x != nil {
		return x.Dict
	}
	return nil
}

type SysDictTypeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId   string `protobuf:"bytes,1,opt,name=dictId,proto3" json:"dictId"`
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName"`
	DictType string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Remark   string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark"`
}

func (x *SysDictTypeRep) Reset() {
	*x = SysDictTypeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeRep) ProtoMessage() {}

func (x *SysDictTypeRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeRep.ProtoReflect.Descriptor instead.
func (*SysDictTypeRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{3}
}

func (x *SysDictTypeRep) GetDictId() string {
	if x != nil {
		return x.DictId
	}
	return ""
}

func (x *SysDictTypeRep) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeRep) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *SysDictTypeRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysDictTypeRep) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteSysDictTypeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysDictTypeRep) Reset() {
	*x = DeleteSysDictTypeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysDictTypeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysDictTypeRep) ProtoMessage() {}

func (x *DeleteSysDictTypeRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysDictTypeRep.ProtoReflect.Descriptor instead.
func (*DeleteSysDictTypeRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSysDictTypeRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysDictRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *GetSysDictRep) Reset() {
	*x = GetSysDictRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictRep) ProtoMessage() {}

func (x *GetSysDictRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictRep.ProtoReflect.Descriptor instead.
func (*GetSysDictRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{5}
}

func (x *GetSysDictRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSysDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dict *DictTypeReply `protobuf:"bytes,1,opt,name=dict,proto3" json:"dict"`
}

func (x *GetSysDictTypeReply) Reset() {
	*x = GetSysDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictTypeReply) ProtoMessage() {}

func (x *GetSysDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictTypeReply.ProtoReflect.Descriptor instead.
func (*GetSysDictTypeReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{6}
}

func (x *GetSysDictTypeReply) GetDict() *DictTypeReply {
	if x != nil {
		return x.Dict
	}
	return nil
}

type GetSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dict *DictDataReply `protobuf:"bytes,1,opt,name=dict,proto3" json:"dict"`
}

func (x *GetSysDictDataReply) Reset() {
	*x = GetSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysDictDataReply) ProtoMessage() {}

func (x *GetSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysDictDataReply.ProtoReflect.Descriptor instead.
func (*GetSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{7}
}

func (x *GetSysDictDataReply) GetDict() *DictDataReply {
	if x != nil {
		return x.Dict
	}
	return nil
}

type ListSysDictTypeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pageNum
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum"`
	// 页面大小
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
}

func (x *ListSysDictTypeRep) Reset() {
	*x = ListSysDictTypeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictTypeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictTypeRep) ProtoMessage() {}

func (x *ListSysDictTypeRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictTypeRep.ProtoReflect.Descriptor instead.
func (*ListSysDictTypeRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{8}
}

func (x *ListSysDictTypeRep) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSysDictTypeRep) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListSysDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Rows  []*DictTypeReply `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows"`
}

func (x *ListSysDictTypeReply) Reset() {
	*x = ListSysDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictTypeReply) ProtoMessage() {}

func (x *ListSysDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictTypeReply.ProtoReflect.Descriptor instead.
func (*ListSysDictTypeReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{9}
}

func (x *ListSysDictTypeReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysDictTypeReply) GetRows() []*DictTypeReply {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CacheSysDicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CacheSysDicReq) Reset() {
	*x = CacheSysDicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheSysDicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheSysDicReq) ProtoMessage() {}

func (x *CacheSysDicReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheSysDicReq.ProtoReflect.Descriptor instead.
func (*CacheSysDicReq) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{10}
}

type OptionSelectTypeRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OptionSelectTypeRep) Reset() {
	*x = OptionSelectTypeRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionSelectTypeRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionSelectTypeRep) ProtoMessage() {}

func (x *OptionSelectTypeRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionSelectTypeRep.ProtoReflect.Descriptor instead.
func (*OptionSelectTypeRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{11}
}

type OptionSelectTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dict []*DictTypeReply `protobuf:"bytes,2,rep,name=dict,proto3" json:"dict"`
}

func (x *OptionSelectTypeReply) Reset() {
	*x = OptionSelectTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionSelectTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionSelectTypeReply) ProtoMessage() {}

func (x *OptionSelectTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionSelectTypeReply.ProtoReflect.Descriptor instead.
func (*OptionSelectTypeReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{12}
}

func (x *OptionSelectTypeReply) GetDict() []*DictTypeReply {
	if x != nil {
		return x.Dict
	}
	return nil
}

type SysDictDataRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode  string `protobuf:"bytes,1,opt,name=dictCode,proto3" json:"dictCode"`
	DictSort  int64  `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort"`
	DictLabel string `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel"`
	DictValue string `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue"`
	DictType  string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType"`
	CssClass  string `protobuf:"bytes,6,opt,name=cssClass,proto3" json:"cssClass"`
	ListClass string `protobuf:"bytes,7,opt,name=listClass,proto3" json:"listClass"`
	IsDefault string `protobuf:"bytes,8,opt,name=isDefault,proto3" json:"isDefault"`
	Status    string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	Default   bool   `protobuf:"varint,10,opt,name=default,proto3" json:"default"`
	CreateAt  string `protobuf:"bytes,11,opt,name=createAt,proto3" json:"createAt"`
	Remark    string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark"`
}

func (x *SysDictDataRep) Reset() {
	*x = SysDictDataRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataRep) ProtoMessage() {}

func (x *SysDictDataRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataRep.ProtoReflect.Descriptor instead.
func (*SysDictDataRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{13}
}

func (x *SysDictDataRep) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *SysDictDataRep) GetDictSort() int64 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *SysDictDataRep) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *SysDictDataRep) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *SysDictDataRep) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *SysDictDataRep) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *SysDictDataRep) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *SysDictDataRep) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *SysDictDataRep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysDictDataRep) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *SysDictDataRep) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *SysDictDataRep) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type DeleteSysDictDataRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteSysDictDataRep) Reset() {
	*x = DeleteSysDictDataRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSysDictDataRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSysDictDataRep) ProtoMessage() {}

func (x *DeleteSysDictDataRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSysDictDataRep.ProtoReflect.Descriptor instead.
func (*DeleteSysDictDataRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSysDictDataRep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSysDictDataRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pageNum
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum"`
	// 页面大小
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
	DictType string `protobuf:"bytes,3,opt,name=dictType,proto3" json:"dictType"`
}

func (x *ListSysDictDataRep) Reset() {
	*x = ListSysDictDataRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictDataRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictDataRep) ProtoMessage() {}

func (x *ListSysDictDataRep) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictDataRep.ProtoReflect.Descriptor instead.
func (*ListSysDictDataRep) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{15}
}

func (x *ListSysDictDataRep) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSysDictDataRep) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSysDictDataRep) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

type ListSysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Rows  []*DictDataReply `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows"`
}

func (x *ListSysDictDataReply) Reset() {
	*x = ListSysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSysDictDataReply) ProtoMessage() {}

func (x *ListSysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSysDictDataReply.ProtoReflect.Descriptor instead.
func (*ListSysDictDataReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{16}
}

func (x *ListSysDictDataReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSysDictDataReply) GetRows() []*DictDataReply {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictId    string `protobuf:"bytes,1,opt,name=dictId,proto3" json:"dictId"`
	CreatedAt string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt"`
	Remark    string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark"`
	DictName  string `protobuf:"bytes,4,opt,name=dictName,proto3" json:"dictName"`
	DictType  string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType"`
	Status    string `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
}

func (x *DictTypeReply) Reset() {
	*x = DictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictTypeReply) ProtoMessage() {}

func (x *DictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictTypeReply.ProtoReflect.Descriptor instead.
func (*DictTypeReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{17}
}

func (x *DictTypeReply) GetDictId() string {
	if x != nil {
		return x.DictId
	}
	return ""
}

func (x *DictTypeReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictTypeReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DictTypeReply) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *DictTypeReply) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictTypeReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DictCode  string `protobuf:"bytes,1,opt,name=dictCode,proto3" json:"dictCode"`
	DictSort  int64  `protobuf:"varint,2,opt,name=dictSort,proto3" json:"dictSort"`
	DictLabel string `protobuf:"bytes,3,opt,name=dictLabel,proto3" json:"dictLabel"`
	DictValue string `protobuf:"bytes,4,opt,name=dictValue,proto3" json:"dictValue"`
	DictType  string `protobuf:"bytes,5,opt,name=dictType,proto3" json:"dictType"`
	CssClass  string `protobuf:"bytes,6,opt,name=cssClass,proto3" json:"cssClass"`
	ListClass string `protobuf:"bytes,7,opt,name=listClass,proto3" json:"listClass"`
	IsDefault string `protobuf:"bytes,8,opt,name=isDefault,proto3" json:"isDefault"`
	Status    string `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	Default   bool   `protobuf:"varint,10,opt,name=default,proto3" json:"default"`
	CreatedAt string `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt"`
	Remark    string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark"`
}

func (x *DictDataReply) Reset() {
	*x = DictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_system_v1_sys_dict_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictDataReply) ProtoMessage() {}

func (x *DictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_system_v1_sys_dict_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictDataReply.ProtoReflect.Descriptor instead.
func (*DictDataReply) Descriptor() ([]byte, []int) {
	return file_api_system_v1_sys_dict_proto_rawDescGZIP(), []int{18}
}

func (x *DictDataReply) GetDictCode() string {
	if x != nil {
		return x.DictCode
	}
	return ""
}

func (x *DictDataReply) GetDictSort() int64 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *DictDataReply) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *DictDataReply) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *DictDataReply) GetDictType() string {
	if x != nil {
		return x.DictType
	}
	return ""
}

func (x *DictDataReply) GetCssClass() string {
	if x != nil {
		return x.CssClass
	}
	return ""
}

func (x *DictDataReply) GetListClass() string {
	if x != nil {
		return x.ListClass
	}
	return ""
}

func (x *DictDataReply) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *DictDataReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DictDataReply) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *DictDataReply) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictDataReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

var File_api_system_v1_sys_dict_proto protoreflect.FileDescriptor

var file_api_system_v1_sys_dict_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x5f, 0x64, 0x69, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x13, 0x0a, 0x11, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x69, 0x63, 0x74, 0x22, 0x90, 0x01,
	0x0a, 0x0e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x30, 0x0a, 0x04, 0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x69,
	0x63, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x69, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x69, 0x63, 0x74, 0x22, 0x5c, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x70, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x52, 0x65, 0x71, 0x22, 0x15, 0x0a, 0x13, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x70, 0x22, 0x49, 0x0a, 0x15, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x69, 0x63, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x69, 0x63, 0x74, 0x22, 0xde, 0x02,
	0x0a, 0x0e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2f,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x78, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5e, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x69, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xdf, 0x02, 0x0a, 0x0d, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53,
	0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x73, 0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0xb1, 0x0c, 0x0a, 0x07,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12, 0x77, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d,
	0x12, 0x73, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01,
	0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x73, 0x61, 0x76, 0x65, 0x12, 0x75, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x7d, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x2a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x1a, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63,
	0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x78, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x10, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x70, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x73,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x73,
	0x61, 0x76, 0x65, 0x12, 0x75, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x7d, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x13, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x12,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69,
	0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x42,
	0x29, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x16, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_system_v1_sys_dict_proto_rawDescOnce sync.Once
	file_api_system_v1_sys_dict_proto_rawDescData = file_api_system_v1_sys_dict_proto_rawDesc
)

func file_api_system_v1_sys_dict_proto_rawDescGZIP() []byte {
	file_api_system_v1_sys_dict_proto_rawDescOnce.Do(func() {
		file_api_system_v1_sys_dict_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_system_v1_sys_dict_proto_rawDescData)
	})
	return file_api_system_v1_sys_dict_proto_rawDescData
}

var file_api_system_v1_sys_dict_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_system_v1_sys_dict_proto_goTypes = []interface{}{
	(*EmptySysDictReply)(nil),     // 0: api.system.v1.EmptySysDictReply
	(*SysDictDataTypeReq)(nil),    // 1: api.system.v1.SysDictDataTypeReq
	(*SysDictDataTypeReply)(nil),  // 2: api.system.v1.SysDictDataTypeReply
	(*SysDictTypeRep)(nil),        // 3: api.system.v1.SysDictTypeRep
	(*DeleteSysDictTypeRep)(nil),  // 4: api.system.v1.DeleteSysDictTypeRep
	(*GetSysDictRep)(nil),         // 5: api.system.v1.GetSysDictRep
	(*GetSysDictTypeReply)(nil),   // 6: api.system.v1.GetSysDictTypeReply
	(*GetSysDictDataReply)(nil),   // 7: api.system.v1.GetSysDictDataReply
	(*ListSysDictTypeRep)(nil),    // 8: api.system.v1.ListSysDictTypeRep
	(*ListSysDictTypeReply)(nil),  // 9: api.system.v1.ListSysDictTypeReply
	(*CacheSysDicReq)(nil),        // 10: api.system.v1.CacheSysDicReq
	(*OptionSelectTypeRep)(nil),   // 11: api.system.v1.OptionSelectTypeRep
	(*OptionSelectTypeReply)(nil), // 12: api.system.v1.OptionSelectTypeReply
	(*SysDictDataRep)(nil),        // 13: api.system.v1.SysDictDataRep
	(*DeleteSysDictDataRep)(nil),  // 14: api.system.v1.DeleteSysDictDataRep
	(*ListSysDictDataRep)(nil),    // 15: api.system.v1.ListSysDictDataRep
	(*ListSysDictDataReply)(nil),  // 16: api.system.v1.ListSysDictDataReply
	(*DictTypeReply)(nil),         // 17: api.system.v1.DictTypeReply
	(*DictDataReply)(nil),         // 18: api.system.v1.DictDataReply
}
var file_api_system_v1_sys_dict_proto_depIdxs = []int32{
	18, // 0: api.system.v1.SysDictDataTypeReply.dict:type_name -> api.system.v1.DictDataReply
	17, // 1: api.system.v1.GetSysDictTypeReply.dict:type_name -> api.system.v1.DictTypeReply
	18, // 2: api.system.v1.GetSysDictDataReply.dict:type_name -> api.system.v1.DictDataReply
	17, // 3: api.system.v1.ListSysDictTypeReply.rows:type_name -> api.system.v1.DictTypeReply
	17, // 4: api.system.v1.OptionSelectTypeReply.dict:type_name -> api.system.v1.DictTypeReply
	18, // 5: api.system.v1.ListSysDictDataReply.rows:type_name -> api.system.v1.DictDataReply
	1,  // 6: api.system.v1.SysDict.SysDictDataType:input_type -> api.system.v1.SysDictDataTypeReq
	3,  // 7: api.system.v1.SysDict.CreateSysDictType:input_type -> api.system.v1.SysDictTypeRep
	3,  // 8: api.system.v1.SysDict.UpdateSysDictType:input_type -> api.system.v1.SysDictTypeRep
	4,  // 9: api.system.v1.SysDict.DeleteSysDictType:input_type -> api.system.v1.DeleteSysDictTypeRep
	5,  // 10: api.system.v1.SysDict.GetSysDictType:input_type -> api.system.v1.GetSysDictRep
	8,  // 11: api.system.v1.SysDict.ListSysDictType:input_type -> api.system.v1.ListSysDictTypeRep
	11, // 12: api.system.v1.SysDict.OptionSelectType:input_type -> api.system.v1.OptionSelectTypeRep
	13, // 13: api.system.v1.SysDict.CreateSysDictData:input_type -> api.system.v1.SysDictDataRep
	13, // 14: api.system.v1.SysDict.UpdateSysDictData:input_type -> api.system.v1.SysDictDataRep
	14, // 15: api.system.v1.SysDict.DeleteSysDictData:input_type -> api.system.v1.DeleteSysDictDataRep
	5,  // 16: api.system.v1.SysDict.GetSysDictData:input_type -> api.system.v1.GetSysDictRep
	15, // 17: api.system.v1.SysDict.ListSysDictData:input_type -> api.system.v1.ListSysDictDataRep
	10, // 18: api.system.v1.SysDict.RefreshCacheSysDict:input_type -> api.system.v1.CacheSysDicReq
	2,  // 19: api.system.v1.SysDict.SysDictDataType:output_type -> api.system.v1.SysDictDataTypeReply
	0,  // 20: api.system.v1.SysDict.CreateSysDictType:output_type -> api.system.v1.EmptySysDictReply
	0,  // 21: api.system.v1.SysDict.UpdateSysDictType:output_type -> api.system.v1.EmptySysDictReply
	0,  // 22: api.system.v1.SysDict.DeleteSysDictType:output_type -> api.system.v1.EmptySysDictReply
	6,  // 23: api.system.v1.SysDict.GetSysDictType:output_type -> api.system.v1.GetSysDictTypeReply
	9,  // 24: api.system.v1.SysDict.ListSysDictType:output_type -> api.system.v1.ListSysDictTypeReply
	12, // 25: api.system.v1.SysDict.OptionSelectType:output_type -> api.system.v1.OptionSelectTypeReply
	0,  // 26: api.system.v1.SysDict.CreateSysDictData:output_type -> api.system.v1.EmptySysDictReply
	0,  // 27: api.system.v1.SysDict.UpdateSysDictData:output_type -> api.system.v1.EmptySysDictReply
	0,  // 28: api.system.v1.SysDict.DeleteSysDictData:output_type -> api.system.v1.EmptySysDictReply
	7,  // 29: api.system.v1.SysDict.GetSysDictData:output_type -> api.system.v1.GetSysDictDataReply
	16, // 30: api.system.v1.SysDict.ListSysDictData:output_type -> api.system.v1.ListSysDictDataReply
	0,  // 31: api.system.v1.SysDict.RefreshCacheSysDict:output_type -> api.system.v1.EmptySysDictReply
	19, // [19:32] is the sub-list for method output_type
	6,  // [6:19] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_api_system_v1_sys_dict_proto_init() }
func file_api_system_v1_sys_dict_proto_init() {
	if File_api_system_v1_sys_dict_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_system_v1_sys_dict_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptySysDictReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysDictTypeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysDictRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictTypeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheSysDicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionSelectTypeRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionSelectTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSysDictDataRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictDataRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_system_v1_sys_dict_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_system_v1_sys_dict_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_system_v1_sys_dict_proto_goTypes,
		DependencyIndexes: file_api_system_v1_sys_dict_proto_depIdxs,
		MessageInfos:      file_api_system_v1_sys_dict_proto_msgTypes,
	}.Build()
	File_api_system_v1_sys_dict_proto = out.File
	file_api_system_v1_sys_dict_proto_rawDesc = nil
	file_api_system_v1_sys_dict_proto_goTypes = nil
	file_api_system_v1_sys_dict_proto_depIdxs = nil
}
